diff -aur gimp-2.6.11/plug-ins/file-uri/uri-backend-libcurl.c gimp-2.6.11.patched/plug-ins/file-uri/uri-backend-libcurl.c
--- gimp-2.6.11/plug-ins/file-uri/uri-backend-libcurl.c	2010-07-03 00:51:59.000000000 +0200
+++ gimp-2.6.11.patched/plug-ins/file-uri/uri-backend-libcurl.c	2011-06-23 19:15:30.000000000 +0200
@@ -4,9 +4,9 @@
  * libcurl backend for the URI plug-in
  * Copyright (C) 2006 Mukund Sivaraman <muks@mukund.org>
  *
- * This program is free software; you can redistribute it and/or modify
+ * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
+ * the Free Software Foundation; either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
@@ -15,8 +15,7 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include "config.h"
@@ -24,7 +23,6 @@
 #include <errno.h>
 
 #include <curl/curl.h>
-#include <curl/types.h>
 #include <curl/easy.h>
 
 #include <glib/gstdio.h>
@@ -63,7 +61,7 @@
 
   vinfo = curl_version_info (CURLVERSION_NOW);
 
-  protocols = g_string_new ("http:,ftp:");
+  protocols = g_string_new ("http:,ftp:,gopher:");
 
   if (vinfo->features & CURL_VERSION_SSL)
     {
@@ -153,7 +151,7 @@
   FILE      *out_file;
   CURL      *curl_handle;
   CURLcode   result;
-  gint       response_code;
+  glong      response_code;
 
   gimp_progress_init (_("Connecting to server"));
 
@@ -195,12 +193,12 @@
 
   curl_easy_getinfo (curl_handle, CURLINFO_RESPONSE_CODE, &response_code);
 
-  if (response_code != 200)
+  if (response_code != 200 && response_code != 226 && response_code != 0)
     {
       fclose (out_file);
       g_set_error (error, G_FILE_ERROR, G_FILE_ERROR_FAILED,
                    _("Opening '%s' for reading resulted in HTTP "
-                     "response code: %d"),
+                     "response code: %ld"),
                    uri, response_code);
       curl_easy_cleanup (curl_handle);
       return FALSE;
@@ -224,3 +222,10 @@
 
   return FALSE;
 }
+
+gchar *
+uri_backend_map_image (const gchar  *uri,
+                       GimpRunMode   run_mode)
+{
+  return NULL;
+}
